{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/romanenko2/src/components/sidebar.tsx"],"sourcesContent":["// Use Link component for internal links\nimport Link from \"next/link\";\n\nconst navItems = [\n  { name: \"Bio\", path: \"/\" },\n  { name: \"Å’uvres\", path: \"/oeuvres\" },\n  { name: \"Presse\", path: \"/presse\" },\n  { name: \"Contact\", path: \"/contact\" },\n];\n\ninterface SidebarProps {\n  pathname: string;\n}\n\nexport function Sidebar({ pathname }: SidebarProps) {\n  return (\n    <aside className=\"fixed top-0 left-0 w-[350px] h-screen flex flex-col p-6 border-r border-gray-200 bg-white hidden lg:flex\">\n      <header>\n        <Link href=\"/\" className=\"block\">\n          <h1 className=\"text-[50px] font-bold leading-[0.8em] tracking-[-2px] text-[#111]\">\n            michael<br />romanenko\n          </h1>\n        </Link>\n      </header>\n\n      {/* This spacer pushes the navigation to the bottom */}\n      <div className=\"flex-grow\"></div>\n\n      <nav className=\"flex flex-col space-y-3 mb-8\">\n        {navItems.map((item) => {\n          const isActive = pathname === item.path;\n          return (\n            <Link\n              key={item.path}\n              href={item.path}\n              className={`text-base ${\n                isActive\n                  ? \"font-bold text-[#404040]\"\n                  : \"font-medium text-[#666666]\"\n              }`}\n            >\n              {item.name}\n            </Link>\n          );\n        })}\n      </nav>\n    </aside>\n  );\n}\n\nexport function MobileSidebar({ pathname }: SidebarProps) {\n  return (\n    <div className=\"lg:hidden w-full bg-white border-b border-gray-200 p-4 fixed top-0 left-0 right-0 z-10\">\n      <div className=\"flex flex-col\">\n        <header className=\"mb-4\">\n          <Link href=\"/\" className=\"block\">\n            <h1 className=\"text-2xl font-bold tracking-tighter text-[#111]\">\n              michael romanenko\n            </h1>\n          </Link>\n        </header>\n\n        <nav className=\"flex space-x-4\">\n          {navItems.map((item) => {\n            const isActive = pathname === item.path;\n            return (\n              <Link\n                key={item.path}\n                href={item.path}\n                className={`text-sm ${\n                  isActive\n                    ? \"font-bold text-[#404040]\"\n                    : \"font-medium text-[#666666]\"\n                }`}\n              >\n                {item.name}\n              </Link>\n            );\n          })}\n        </nav>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"AAAA,wCAAwC;;;;;;AACxC;;;AAEA,MAAM,WAAW;IACf;QAAE,MAAM;QAAO,MAAM;IAAI;IACzB;QAAE,MAAM;QAAU,MAAM;IAAW;IACnC;QAAE,MAAM;QAAU,MAAM;IAAU;IAClC;QAAE,MAAM;QAAW,MAAM;IAAW;CACrC;AAMM,SAAS,QAAQ,EAAE,QAAQ,EAAgB;IAChD,qBACE,8OAAC;QAAM,WAAU;;0BACf,8OAAC;0BACC,cAAA,8OAAC,4JAAA,CAAA,UAAI;oBAAC,MAAK;oBAAI,WAAU;8BACvB,cAAA,8OAAC;wBAAG,WAAU;;4BAAoE;0CACzE,8OAAC;;;;;4BAAK;;;;;;;;;;;;;;;;;0BAMnB,8OAAC;gBAAI,WAAU;;;;;;0BAEf,8OAAC;gBAAI,WAAU;0BACZ,SAAS,GAAG,CAAC,CAAC;oBACb,MAAM,WAAW,aAAa,KAAK,IAAI;oBACvC,qBACE,8OAAC,4JAAA,CAAA,UAAI;wBAEH,MAAM,KAAK,IAAI;wBACf,WAAW,CAAC,UAAU,EACpB,WACI,6BACA,8BACJ;kCAED,KAAK,IAAI;uBARL,KAAK,IAAI;;;;;gBAWpB;;;;;;;;;;;;AAIR;AAEO,SAAS,cAAc,EAAE,QAAQ,EAAgB;IACtD,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAO,WAAU;8BAChB,cAAA,8OAAC,4JAAA,CAAA,UAAI;wBAAC,MAAK;wBAAI,WAAU;kCACvB,cAAA,8OAAC;4BAAG,WAAU;sCAAkD;;;;;;;;;;;;;;;;8BAMpE,8OAAC;oBAAI,WAAU;8BACZ,SAAS,GAAG,CAAC,CAAC;wBACb,MAAM,WAAW,aAAa,KAAK,IAAI;wBACvC,qBACE,8OAAC,4JAAA,CAAA,UAAI;4BAEH,MAAM,KAAK,IAAI;4BACf,WAAW,CAAC,QAAQ,EAClB,WACI,6BACA,8BACJ;sCAED,KAAK,IAAI;2BARL,KAAK,IAAI;;;;;oBAWpB;;;;;;;;;;;;;;;;;AAKV","debugId":null}},
    {"offset": {"line": 167, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/romanenko2/src/components/client-sidebar.tsx"],"sourcesContent":["\"use client\";\n\nimport { usePathname } from \"next/navigation\";\nimport { Sidebar, MobileSidebar } from \"./sidebar\";\nimport { useEffect, useState } from \"react\";\n\nexport function ClientSidebar() {\n  const pathname = usePathname() || \"/\";\n  const [mounted, setMounted] = useState(false);\n\n  // This prevents hydration errors by only rendering after mount\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  if (!mounted) {\n    return null;\n  }\n\n  return (\n    <>\n      <Sidebar pathname={pathname} />\n      <MobileSidebar pathname={pathname} />\n    </>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMO,SAAS;IACd,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD,OAAO;IAClC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,+DAA+D;IAC/D,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,WAAW;IACb,GAAG,EAAE;IAEL,IAAI,CAAC,SAAS;QACZ,OAAO;IACT;IAEA,qBACE;;0BACE,8OAAC,6HAAA,CAAA,UAAO;gBAAC,UAAU;;;;;;0BACnB,8OAAC,6HAAA,CAAA,gBAAa;gBAAC,UAAU;;;;;;;;AAG/B","debugId":null}}]
}